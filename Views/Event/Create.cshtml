@model Evention2.Models.EventCreateViewModel

@{
    ViewBag.Title = "Event Publish";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Publish Event</h2>


@using (Html.BeginForm("Create", "Event", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.EventType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.EventType, ViewBag.TypeList as SelectList)
            @Html.ValidationMessageFor(model => model.EventType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EventName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EventDesc, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.EventDesc, htmlAttributes: new { @class = "form-control", rows = "10" })
            @Html.ValidationMessageFor(model => model.EventDesc, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Surburb, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Surburb, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Surburb, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PostCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PostCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PostCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Start_date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Start_date, new { htmlAttributes = new { @class = "form-control", id = "datebox1" } })
            @Html.ValidationMessageFor(model => model.Start_date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.End_date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.End_date, new { htmlAttributes = new { @class = "form-control", id = "datebox2" } })
            @Html.ValidationMessageFor(model => model.End_date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-2">
            <label>Poster</label>
        </div>
        <div class="col-md-10">
            <div class="input-group">
                <div class="custom-file">
                    <input type="file" id="poster_upload" class="custom-file-input" name="PosterImage" aria-describedby="uploadButton" />
                    <label class="custom-file-label" id="fileLabel" for="poster_upload">Choose File</label>
                </div>
            </div>
        </div>
    </div>
    <script>
        $(window).ready(function () {
            $("#poster_upload").change((e) => {
                var fileName = e.target.value;
                // TODO: Test under *nix environment.
                fileName = fileName.substring(fileName.lastIndexOf("\\")+1, fileName.length);
                $("#fileLabel").text(fileName);
            })
            $("#uploadButton").click((e) => {
                var data = new FormData();
                data.append("file", $("#poster_upload")[0].files[0]);
                $.ajax({
                    type: "POST",
                    url: '/Event/UploadPoster',
                    contentType: false,
                    processData: false,
                    data: data,
                    success: (result) => {
                        console.log(result);
                    },
                    error: () => { alert("failed"); }
                })
            })
        })
    </script>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </div>

    <div class="form-group">
        <label for="address">
            Address:
        </label>
        <input type="text" class="form-text" id="addressBox" />
    </div>
    <script>
        // Passed an event object.
        $("#addressBox").change((e) => {
            console.log(e.target.value);
        });
    </script>

</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<!--Datepicker script-->
<script>
    $(function () {
        var startDate = new Date();
        
        $('#datebox1').datepicker({
            dateFormat: 'yy-mm-dd',
        });
        $('#datebox1').datepicker("setDate", new Date());
        $('#datebox2').datepicker({
            dateFormat: 'yy-mm-dd',
        });
        $('#datebox2').datepicker("setDate", new Date());
    });
    $()
</script>